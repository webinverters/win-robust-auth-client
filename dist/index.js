!function t(r,n,e){function o(i,c){if(!n[i]){if(!r[i]){var a="function"==typeof require&&require;if(!c&&a)return a(i,!0);if(u)return u(i,!0);throw new Error("Cannot find module '"+i+"'")}var s=n[i]={exports:{}};r[i][0].call(s.exports,function(t){var n=r[i][1][t];return o(n?n:t)},s,s.exports,t,r,n,e)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<e.length;i++)o(e[i]);return o}({1:[function(t,r,n){angular.module("win.robust-auth-client",[]).service("authProvider",["config","$http","$q",t("./src/token-auth-provider")]).service("authSvc",["config","authProvider","storage","$log","$q",t("./src/auth-svc.js")])},{"./src/auth-svc.js":2,"./src/token-auth-provider":3}],2:[function(t,r,n){"use strict";r.exports=function(t,r,n,e,o){var u={};t=t?t:{},t=_.defaults(t,{});var i=null,c=function(t){return i=t,t?(e.log("$login",i.id),i.lastLoginTimestamp=(new Date).getTime(),n.set("user-"+i.id,i),n.set("current-user",i)):(n.set("current-user",null),e.log("Login Failed.")),i};return u.login=function(t){return e.log("Logging In...",t),r.login(t).then(function(t){return c(t)})["catch"](function(t){throw e.logError("An error occurred attempting to login.",t),t})},u.logout=function(){return r.logout().then(function(){n.remove("user-"+i.id),n.remove("current-user"),e.log("$logout",i.id),i=null})["catch"](function(t){throw e.logError(t),t})},u.currentIdentity=function(t){if(!t)return i?i:i=n.get("current-user");var r=n.get("user-"+t);r?i=r:e.log("User does not exist.")},u.reauthenticate=function(t){var u=n.get("current-user");return t&&(u=n.get("user-"+t)),u?(new Date).getTime()-u.lastLoginTimestamp<432e5?(i=u,n.set("current-user",i),o.when(i)):r.reauthenticate(u).then(function(t){return c(t)})["catch"](function(t){return e.logError("Error Reauthenticating: ",t),c(null),null}):o.when(null)},u}},{}],3:[function(t,r,n){"use strict";r.exports=function(t,r,n){var e={};return t=t?t:{},t=_.defaults(t,{}),e.login=function(t){return r.post("/token",t).then(function(t){if(t.body)throw"Failed to login.  Endpoint missing.";try{return n.when(t.data)}catch(r){throw console.log("/token API response:",t),"Failed to login.  Endpoint version mismatch."}},function(t){if(401==t.status){if(t.data.message)throw t.data.message;throw"Failed to login: invalid credentials."}throw console.error(t),"Failed to login.  Connection failure."})},e.logout=function(){return n.when()},e.reauthenticate=function(t){return e.login(t)},e}},{}]},{},[1]);