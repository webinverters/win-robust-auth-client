!function t(r,e,n){function o(i,c){if(!e[i]){if(!r[i]){var s="function"==typeof require&&require;if(!c&&s)return s(i,!0);if(u)return u(i,!0);throw new Error("Cannot find module '"+i+"'")}var a=e[i]={exports:{}};r[i][0].call(a.exports,function(t){var e=r[i][1][t];return o(e?e:t)},a,a.exports,t,r,e,n)}return e[i].exports}for(var u="function"==typeof require&&require,i=0;i<n.length;i++)o(n[i]);return o}({1:[function(t,r,e){angular.module("win.robust-auth-client",[]).service("authProvider",["config","$http",t("./src/token-auth-provider")]).service("authSvc",["config","authProvider","storage","logger",t("./src/auth-svc.js")])},{"./src/auth-svc.js":2,"./src/token-auth-provider":3}],2:[function(t,r,e){"use strict";r.exports=function(t,r,e,n){var o={};t=t?t:{},t=_.defaults(t,{});var u=null,i=function(t){return u=t,t?(n.log("$login",u.id),u.lastLoginTimestamp=(new Date).getTime(),e.set("user-"+u.id,u),e.set("current-user",u)):(e.set("current-user",null),n.log("Login Failed.")),u};return o.login=function(t){return n.log("Logging In...",t),r.login(t).then(function(t){return i(t)})["catch"](function(t){throw n.logError("An error occurred attempting to login.",t),t})},o.logout=function(){return r.logout().then(function(){e.remove("user-"+u.id),e.remove("current-user"),n.log("$logout",u.id),u=null})["catch"](function(t){throw n.logError(t),t})},o.currentIdentity=function(t){if(!t)return u?u:u=e.get("current-user");var r=e.get("user-"+t);r?u=r:n.log("User does not exist.")},o.reauthenticate=function(t){var o=e.get("current-user");return t&&(o=e.get("user-"+t)),o?(new Date).getTime()-o.lastLoginTimestamp<432e5?(u=o,e.set("current-user",u),p.resolve(u)):r.reauthenticate(o).then(function(t){return i(t)})["catch"](function(t){return n.logError("Error Reauthenticating: ",t),i(null),null}):p.resolve(null)},o}},{}],3:[function(t,r,e){"use strict";r.exports=function(t,r){var e={};return t=t?t:{},t=_.defaults(t,{}),e.login=function(t){return r.post("/token",t).then(function(t){if(t.body)throw"Failed to login.  Endpoint missing.";try{return p.resolve(t.data)}catch(r){throw console.log("/token API response:",t),"Failed to login.  Endpoint version mismatch."}},function(t){if(401==t.status){if(t.data.message)throw t.data.message;throw"Failed to login: invalid credentials."}throw console.error(t),"Failed to login.  Connection failure."})},e.logout=function(){return p.resolve()},e.reauthenticate=function(t){return e.login(t)},e}},{}]},{},[1]);